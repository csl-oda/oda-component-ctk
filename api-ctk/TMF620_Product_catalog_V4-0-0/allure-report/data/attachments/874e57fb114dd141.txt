pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});
  
  
  
var jsonData = pm.response.json();
  
if (Array.isArray(jsonData) && (jsonData.length > 0)) {
    jsonData.forEach(function (instance, index) {
      
        var requiredAttributes = ['href', 'id', 'lastUpdate', 'lifecycleStatus', 'name'];
      
        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });
      
      
      
        pm.test('Response has href attribute', function() { pm.expect(instance["href"]).to.be.a('string'); });
        pm.test('Response has id attribute', function() { pm.expect(instance["id"]).to.be.a('string'); });
        pm.test('Response has lastUpdate attribute', function() { pm.expect(instance["lastUpdate"]).to.be.a('string'); });
        pm.test('Response has lifecycleStatus attribute', function() { pm.expect(instance["lifecycleStatus"]).to.be.a('string'); });
        pm.test('Response has name attribute', function() { pm.expect(instance["name"]).to.be.a('string'); });
        pm.test('Response has priceType attribute', function() { pm.expect(instance["priceType"]).to.be.a('string'); });
      
        pm.test('Body includes value held on href', function () {
            pm.expect(pm.response.text()).to.include(instance['href']);
        });
        pm.test('Body includes value held on id', function () {
            pm.expect(pm.response.text()).to.include(instance['id']);
        });
        pm.test('Body includes value held on lastUpdate', function () {
            pm.expect(pm.response.text()).to.include(instance['lastUpdate']);
        });
        pm.test('Body includes value held on lifecycleStatus', function () {
            pm.expect(pm.response.text()).to.include(instance['lifecycleStatus']);
        });
        pm.test('Body includes value held on name', function () {
            pm.expect(pm.response.text()).to.include(instance['name']);
        });
        pm.test('Body includes value held on priceType', function () {
            pm.expect(pm.response.text()).to.include(instance['priceType']);
        });
        // Individualized tests
        if (instance.id == pm.globals.get("IDPOP01")) {
            pm.test('href is ' + pm.globals.get("HREFPOP01"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPOP01');});
            pm.test('id is ' + pm.globals.get("IDPOP01"), function() {pm.expect(instance['id']) == pm.globals.get('IDPOP01');});
            pm.test('lastUpdate is ' + pm.globals.get("LASTUPDATEPOP01"), function() {pm.expect(instance['lastUpdate']) == pm.globals.get('LASTUPDATEPOP01');});
            pm.test('lifecycleStatus is ' + pm.globals.get("LIFECYCLESTATUSPOP01"), function() {pm.expect(instance['lifecycleStatus']) == pm.globals.get('LIFECYCLESTATUSPOP01');});
            pm.test('name is ' + pm.globals.get("NAMEPOP01"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPOP01');});
            pm.test('priceType is ' + pm.globals.get("PRICETYPEPOP01"), function() {pm.expect(instance['priceType']) == pm.globals.get('PRICETYPEPOP01');});
        }
        if (instance.id == pm.globals.get("IDPOP02")) {
            pm.test('IDPOP02 not expected on this test', function () {
                console.log("Non expected resource, may happen if there is a collision on attributes")
            });
        }
          
    });
  }
  else {
    var instance = pm.response.json();
    var requiredAttributes = ['href', 'id', 'lastUpdate', 'lifecycleStatus', 'name'];
      
        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });
      
      
      
        pm.test('Response has href attribute', function() { pm.expect(instance["href"]).to.be.a('string'); });
        pm.test('Response has id attribute', function() { pm.expect(instance["id"]).to.be.a('string'); });
        pm.test('Response has lastUpdate attribute', function() { pm.expect(instance["lastUpdate"]).to.be.a('string'); });
        pm.test('Response has lifecycleStatus attribute', function() { pm.expect(instance["lifecycleStatus"]).to.be.a('string'); });
        pm.test('Response has name attribute', function() { pm.expect(instance["name"]).to.be.a('string'); });
        pm.test('Response has priceType attribute', function() { pm.expect(instance["priceType"]).to.be.a('string'); });
      
        pm.test('Body includes value held on href', function () {
            pm.expect(pm.response.text()).to.include(instance['href']);
        });
        pm.test('Body includes value held on id', function () {
            pm.expect(pm.response.text()).to.include(instance['id']);
        });
        pm.test('Body includes value held on lastUpdate', function () {
            pm.expect(pm.response.text()).to.include(instance['lastUpdate']);
        });
        pm.test('Body includes value held on lifecycleStatus', function () {
            pm.expect(pm.response.text()).to.include(instance['lifecycleStatus']);
        });
        pm.test('Body includes value held on name', function () {
            pm.expect(pm.response.text()).to.include(instance['name']);
        });
        pm.test('Body includes value held on priceType', function () {
            pm.expect(pm.response.text()).to.include(instance['priceType']);
        });
        // Individualized tests
        if (instance.id == pm.globals.get("IDPOP01")) {
            pm.test('href is ' + pm.globals.get("HREFPOP01"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPOP01');});
            pm.test('id is ' + pm.globals.get("IDPOP01"), function() {pm.expect(instance['id']) == pm.globals.get('IDPOP01');});
            pm.test('lastUpdate is ' + pm.globals.get("LASTUPDATEPOP01"), function() {pm.expect(instance['lastUpdate']) == pm.globals.get('LASTUPDATEPOP01');});
            pm.test('lifecycleStatus is ' + pm.globals.get("LIFECYCLESTATUSPOP01"), function() {pm.expect(instance['lifecycleStatus']) == pm.globals.get('LIFECYCLESTATUSPOP01');});
            pm.test('name is ' + pm.globals.get("NAMEPOP01"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPOP01');});
            pm.test('priceType is ' + pm.globals.get("PRICETYPEPOP01"), function() {pm.expect(instance['priceType']) == pm.globals.get('PRICETYPEPOP01');});
        }
        if (instance.id == pm.globals.get("IDPOP02")) {
            pm.test('IDPOP02 not expected on this test', function () {
                console.log("Non expected resource, may happen if there is a collision on attributes")
            });
        }

        
   
}
  
  