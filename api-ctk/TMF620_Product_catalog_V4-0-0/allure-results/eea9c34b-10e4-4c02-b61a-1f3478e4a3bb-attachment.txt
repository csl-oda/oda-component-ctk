var jsonData = pm.response.json();

if (Array.isArray(jsonData)) { 
  
    pm.test('Array not expected as response', function (){pm.expect.fail()});
  

}

pm.test("Status code is 201", function () {
  pm.response.to.have.status(201);
});

var instance = pm.response.json();



var requiredAttributes = ['href', 'id', 'lastUpdate', 'lifecycleStatus', 'name'];

if (instance['isBundle'] !== undefined && instance['isBundle'] == true){
  requiredAttributes.push('bundledProductSpecification')
}
if (instance['isBundle'] === undefined || instance['isBundle'] == false){
  requiredAttributes.push('productSpecification')
  pm.test('Response has productSpecification attribute', function () { pm.expect(instance["productSpecification"]).to.be.an('object'); });

}

pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });




pm.test('Response has href attribute', function() { pm.expect(instance["href"]).to.be.a('string'); });
pm.test('Response has id attribute', function() { pm.expect(instance["id"]).to.be.a('string'); });
pm.test('Response has lastUpdate attribute', function() { pm.expect(instance["lastUpdate"]).to.be.a('string'); });
pm.test('Response has lifecycleStatus attribute', function() { pm.expect(instance["lifecycleStatus"]).to.be.a('string'); });
pm.test('Response has name attribute', function() { pm.expect(instance["name"]).to.be.a('string'); });

pm.globals.set('HREFPO01', instance['href']);
pm.globals.set('IDPO01', instance['id']);
pm.globals.set('LASTUPDATEPO01', instance['lastUpdate']);
pm.globals.set('LIFECYCLESTATUSPO01', instance['lifecycleStatus']);
pm.globals.set('NAMEPO01', instance['name']);

pm.test('Body includes value held on href', function () {
  pm.expect(pm.response.text()).to.include(instance['href']);
});
pm.test('Body includes value held on id', function () {
  pm.expect(pm.response.text()).to.include(instance['id']);
});
pm.test('Body includes value held on lastUpdate', function () {
  pm.expect(pm.response.text()).to.include(instance['lastUpdate']);
});
pm.test('Body includes value held on lifecycleStatus', function () {
  pm.expect(pm.response.text()).to.include(instance['lifecycleStatus']);
});
pm.test('Body includes value held on name', function () {
  pm.expect(pm.response.text()).to.include(instance['name']);
});
